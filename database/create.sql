CREATE DATABASE  IF NOT EXISTS lms;
USE lms;

-- Drop all tables

DROP TABLE IF EXISTS loan;
DROP TABLE IF EXISTS owns;
DROP TABLE IF EXISTS library_has_phone_no;
DROP TABLE IF EXISTS checks_out;
DROP TABLE IF EXISTS publisher_has_phone_no;
DROP TABLE IF EXISTS user_has_phone_no;
DROP TABLE IF EXISTS member;
DROP TABLE IF EXISTS publication;
DROP TABLE IF EXISTS author;
DROP TABLE IF EXISTS publisher;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS library;
DROP TABLE IF EXISTS library_system;

-- Create tables

CREATE TABLE author (
  AID INT NOT NULL AUTO_INCREMENT,
  F_Name VARCHAR(32) NOT NULL,
  M_Init CHAR(1) DEFAULT NULL,
  L_Name VARCHAR(32) NOT NULL,
  PRIMARY KEY (AID)
);

CREATE TABLE library_system (
  SID INT NOT NULL AUTO_INCREMENT,
  Name VARCHAR(64) NOT NULL,
  Location VARCHAR(32) NOT NULL,
  Area_Type VARCHAR(16) NOT NULL,
  PRIMARY KEY (SID)
);

CREATE TABLE library (
  LID INT NOT NULL AUTO_INCREMENT,
  Name VARCHAR(64) NOT NULL,
  Address VARCHAR(64) NOT NULL,
  System_ID INT DEFAULT NULL,
  PRIMARY KEY (LID),
  FOREIGN KEY (System_ID) REFERENCES library_system (SID) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE publisher (
  CID INT NOT NULL AUTO_INCREMENT,
  Name VARCHAR(64) NOT NULL,
  Address VARCHAR(64) DEFAULT NULL,
  PRIMARY KEY (CID)
);

CREATE TABLE user (
  UID INT NOT NULL AUTO_INCREMENT,
  Pin CHAR(4) NOT NULL,
  Email VARCHAR(32) DEFAULT NULL,
  F_Name VARCHAR(32) NOT NULL,
  M_Init CHAR(1) DEFAULT NULL,
  L_NAME VARCHAR(32) NOT NULL,
  PRIMARY KEY (UID)
);

CREATE TABLE publication (
  PID INT NOT NULL AUTO_INCREMENT,
  Name VARCHAR(64) NOT NULL,
  Medium VARCHAR(16) DEFAULT NULL,
  AID INT NOT NULL,
  CID INT NOT NULL,
  Publishing_Year INT NOT NULL,
  PRIMARY KEY (PID),
  FOREIGN KEY (AID) REFERENCES author (AID) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (CID) REFERENCES publisher (CID) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE member (
  Member_ID INT NOT NULL AUTO_INCREMENT,
  User_ID INT NOT NULL,
  Library_ID INT NOT NULL,
  PRIMARY KEY (Member_ID),
  FOREIGN KEY (User_ID) REFERENCES user (UID) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (Library_ID) REFERENCES library (LID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE loan (
  Loaner_ID INT NOT NULL,
  Loanee_ID INT NOT NULL,
  Publication_ID INT NOT NULL,
  Quantity INT NOT NULL,
  PRIMARY KEY (Loaner_ID,Loanee_ID,Publication_ID),
  FOREIGN KEY (Loaner_ID) REFERENCES library (LID) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (Loanee_ID) REFERENCES library (LID) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (Publication_ID) REFERENCES publication (PID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE owns (
  Library_ID INT NOT NULL,
  Publication_ID INT NOT NULL,
  Quantity INT NOT NULL DEFAULT '0',
  PRIMARY KEY (Library_ID,Publication_ID),
  FOREIGN KEY (Library_ID) REFERENCES library (LID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (Publication_ID) REFERENCES publication (PID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE checks_out (
  User_ID INT NOT NULL,
  Library_ID INT NOT NULL,
  Publication_ID INT NOT NULL,
  PRIMARY KEY (User_ID,Library_ID,Publication_ID),
  FOREIGN KEY (User_ID) REFERENCES user (UID) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (Library_ID) REFERENCES library (LID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (Publication_ID) REFERENCES publication (PID) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE user_has_phone_no (
  UID INT NOT NULL,
  Phone_No CHAR(10) NOT NULL,
  PRIMARY KEY (UID,Phone_No),
  FOREIGN KEY (UID) REFERENCES user (UID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE publisher_has_phone_no (
  CID INT NOT NULL,
  Phone_No CHAR(10) NOT NULL,
  PRIMARY KEY (CID,Phone_No),
  FOREIGN KEY (CID) REFERENCES publisher (CID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE library_has_phone_no (
  LID INT NOT NULL,
  Phone_No CHAR(10) NOT NULL,
  PRIMARY KEY (LID,Phone_No),
  FOREIGN KEY (LID) REFERENCES library (LID) ON DELETE CASCADE ON UPDATE CASCADE
);
